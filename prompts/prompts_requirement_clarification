# Requirement Clarification Protocol

## When to Seek Clarification

### Ambiguous Formatting Requests
If user says:
- "Make it like [other document]" → ASK what specific aspects
- "Typeset this section" → ASSUME minimal format unless specified
- "Compile with template" → ASK which template elements to include

### Clarification Templates

For section compilation:
"I can compile the [section] in two ways:
1. Minimal format - just the section content with references
2. Full format - including title, authors, abstract
Which would you prefer?"

For formatting matching:
"When you say 'like [document]', do you mean:
- The same LaTeX document class and fonts? (typography only)
- The complete structure including abstract/authors? (full format)
- Something else specific?"

## Anti-Patterns to Avoid
❌ Never assume "like X" means "identical structure to X"
❌ Never add components not explicitly requested
❌ Never use full templates when minimal would suffice

## Default Assumptions
When in doubt:
- Choose minimal over maximal
- Choose simple over complex
- Ask rather than assume

## Decision Tree for Compilation

```
User Request
    |
    ├─ "Compile section" / "Typeset section"
    │   └─ Use MINIMAL template (content only)
    │
    ├─ "Compile with full format" / "Include abstract"
    │   └─ Use FULL template (with frontmatter)
    │
    ├─ "Compile like [other document]"
    │   └─ ASK FOR CLARIFICATION
    │
    └─ Ambiguous request
        └─ ASK FOR CLARIFICATION
```

## Examples of Proper Clarification

### Example 1: Ambiguous Template Request
User: "Compile methods section like the introduction"
Assistant: "When you say 'like the introduction', do you mean:
1. Using the same minimal format (just the methods content)
2. Including the same frontmatter elements (title, authors, abstract)
3. Using the same LaTeX document class and styling?
Please clarify so I can compile it correctly."

### Example 2: Clear Request - No Clarification Needed
User: "Typeset the methods section"
Assistant: [Proceeds with minimal format without asking]

### Example 3: Full Format Request - No Clarification Needed
User: "Compile methods section with full author information and abstract"
Assistant: [Proceeds with full format without asking]

## The Minimal Principle

**GOLDEN RULE**: When processing any request, always:
1. Identify the minimal set of requirements
2. Implement only what was explicitly requested
3. Ask before adding anything beyond the explicit request

### What NOT to Add Without Request
- Abstract (unless explicitly requested)
- Author information (unless explicitly requested)
- Keywords (unless explicitly requested)
- Acknowledgments (unless explicitly requested)
- Any decorative elements or "nice-to-haves"

### What to Always Include
- The requested section content
- Bibliography (if citations exist)
- Basic formatting for readability
- Page numbers (standard practice)

## Communication Guidelines

### When Clarifying
- Be concise and clear
- Offer specific options (not open-ended questions)
- Explain the difference between options briefly
- Default to minimal if no response

### When Proceeding Without Clarification
- State clearly what you're doing
- Example: "I'll compile just the methods section content for your review"
- Don't explain why unless asked

## Common Misunderstandings

### "Professional Looking"
- Does NOT mean add abstract/authors
- DOES mean clean typography and formatting

### "Like a Journal Paper"
- Does NOT mean include all journal frontmatter
- DOES mean use journal typography/style

### "Ready for Submission"
- DOES mean complete and error-free
- Does NOT mean add elements not requested

## Summary Checklist

Before implementing any compilation request:
- [ ] Is the request completely clear?
- [ ] Am I adding anything not explicitly requested?
- [ ] Would a minimal approach satisfy the request?
- [ ] Should I ask for clarification?

If any uncertainty → ASK FOR CLARIFICATION
If all clear → PROCEED WITH MINIMAL APPROACH