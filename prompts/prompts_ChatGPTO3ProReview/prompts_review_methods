⚠️ REVIEW PROMPT: This prompt is for reviewing already-generated content. 
- Can be used by ChatGPT O3 Pro for external review
- Can be used by Claude Code when user explicitly requests peer review
- CANNOT be used during initial content generation

Critique methods.tex with the aim of judging **theorem correctness**, **gap fulfillment**, and **rigour**.

For each numbered criterion, rate as: Adequate / Needs Clarification / Inadequate, and explain briefly.

Criteria  
1. **Theorem-Gap Alignment** – Each theorem explicitly addresses gaps identified in Introduction critique; clear mapping between gaps and solutions.
2. **Mathematical Correctness** – Theorems are logically sound; proofs are complete and rigorous; derivations are properly justified.
3. **Citation Foundation** – All mathematical claims properly cite sources from verified papers; no unsupported statements.
4. **Visual Representations** – Workflow diagrams, architecture figures, and mechanism illustrations present and clear.
5. **Innovation Clarity** – Novel contributions clearly distinguished from existing work; breakthrough approach well-explained.
6. **Procedures & Protocols** – Step‑by‑step description enabling replication; include software parameters & convergence settings.
7. **Sensitivity Analysis** – For competitions: comprehensive analysis included; For journals: appropriateness of inclusion/exclusion justified.
8. **Code-Method Consistency** – Mathematical formulas in .tex match implementations in .py files exactly.
9. **Data & Code Accessibility** – DOI, repository links, licences provided and functional.
10. **Citation Balance** – When citing prior methods, alternates between author-prominent (e.g., "The approach by Wang et al. [1]...") and information-prominent styles; avoids dangling citations.

Additional Review Focus:
- **Gap Fulfillment Verification**: Examine how each theorem/method addresses the specific critiques raised in the Introduction section
- **Diagram Quality**: Assess whether workflow, architecture, and mechanism diagrams effectively communicate the methods
- **Theorem Novelty**: Evaluate if theorems represent genuine advances or merely restate existing knowledge

Recommendations Focus:
- **DO NOT** ask for diagrams/tables that require detailed calculations (save for Results section)
- **DO NOT** ask for conclusions or theorem comparisons (save for Results/Conclusions sections)
- **DO** suggest improvements to existing diagrams and visual representations
- **DO** identify any gaps from Introduction that remain unaddressed
- **DO** verify all mathematical foundations are properly cited

Conclude with a **check‑list of items that must be added or clarified** before the methods can be deemed correct and complete.

Output:
1. Generate comprehensive review following the criteria above
2. Create directory `output/review_reports/` if it doesn't exist
3. Save the review to `output/review_reports/methods_peer_review.md`
4. Include timestamp at the beginning of the review file
5. Present the review results to the user after saving

Review File Structure:
```markdown
# Methods Section Peer Review
Generated on: [timestamp]

## Executive Summary
[1-2 paragraphs summarizing overall assessment]

## Detailed Evaluation

### 1. Study Design & Rationale
Rating: [Adequate/Needs Clarification/Inadequate]
Comments: [specific feedback]

### 2. Materials / Data Sources
[Continue for all criteria...]

## Required Revisions Checklist
- [ ] [Specific item that must be added/clarified]
- [ ] [Another item...]

## Recommendation
[Overall recommendation for the methods section]
```
